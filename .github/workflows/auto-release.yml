name: 'auto release'
on:
  pull_request:
    types:
      - closed

jobs:
  update:
    # if: github.event.pull_request.merged
    runs-on: ubuntu-latest
    name: Create a release
    steps:
      - uses: actions/checkout@v3
      
      - name: Extract version from changelog
        id: extract_version
        run: |
          # Extract the version number from the changelog file
          VERSION=$(grep -oP 'v[0-9]+.*' CHANGELOG.md | head -1 | tr -d '[:space:]')
          echo "Extracted version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Extract release notes from changelog
        id: extract_notes
        run: |
          # Set custom start and end headings
          START_HEADING="Start Heading"
          END_HEADING="End Heading"
          
          # Use awk to extract the line numbers of the start and end headings
          start_line=$(awk "/^# ${START_HEADING}/{print NR+1; exit}" CHANGELOG.md)
          end_line=$(awk "/^# ${END_HEADING}/{print NR-1; exit}" CHANGELOG.md)
          
          # Extract the release notes between the line numbers
          awk -v start_line="$start_line" -v end_line="$end_line" 'NR >= start_line && NR <= end_line' CHANGELOG.md > extracted_notes.txt
          
          NOTES=$(cat extracted_notes.txt)
          echo "Extracted release notes: $NOTES"
          echo "description=$NOTES" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: fivetran-catfritz/release-creator@v0.1.0
        with:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          version: ${{ steps.extract_version.outputs.version }}
          repo: ${{ github.repository }}
          branch: 'main'
          draft: 'true'
          prerelease: 'false'
          title: ${{ steps.extract_version.outputs.version }} ${{ github.repository }}
          description: ${{ steps.extract_notes.outputs.description }}